// src/pages/DashboardPage.tsx
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useAuth } from "../context/AuthContext";
import { useGames } from "../context/GameContext";
import GameCreateForm from "../components/GameCreateForm";
import GameCard from "../components/GameCard";

function DashboardPage() {
  const navigate = useNavigate();
  const { user, logout } = useAuth();

  // –ó–∞–≥–ª—É—à–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
  const myGames = [
    {
      id: "1",
      title: "–¢—ë–º–Ω—ã–µ –∑–µ–º–ª–∏",
      description: "–¢—ë–º–Ω—ã–π —Ñ—ç–Ω—Ç–µ–∑–∏–π–Ω—ã–π –º–∏—Ä —Å –¥—Ä–∞–∫–æ–Ω–∞–º–∏ –∏ –º–∞–≥–∏–µ–π",
      status: "active",
      playersCount: 5,
    },
    {
      id: "2",
      title: "–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ –≤–æ–π–Ω—ã",
      description: "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∏ –∏–Ω—Ç—Ä–∏–≥–∏ –≤ –¥–∞–ª–µ–∫–æ–º –∫–æ—Å–º–æ—Å–µ",
      status: "inactive",
      playersCount: 3,
    },
  ];

  const availableGames = [
    {
      id: "3",
      title: "–¢–∞–π–Ω–∞ —Å—Ç–∞—Ä–æ–≥–æ –∑–∞–º–∫–∞",
      description: "–ì–æ—Ç–∏—á–µ—Å–∫–∏–π —Ö–æ—Ä—Ä–æ—Ä –≤ –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–º –ø–æ–º–µ—Å—Ç—å–µ",
      status: "pending",
      playersCount: 0,
      isPublic: false,
    },
    {
      id: "4",
      title: "–ü—É—Å—Ç–æ—à—å 2077",
      description: "–ü–æ—Å—Ç–∞–ø–æ–∫–∞–ª–∏–ø—Ç–∏—á–µ—Å–∫–∏–π –∫–∏–±–µ—Ä–ø–∞–Ω–∫, –ø–æ–ª–Ω—ã–π –∏–Ω—Ç—Ä–∏–≥ –∏ –º—É—Ç–∞–Ω—Ç–æ–≤",
      status: "active",
      playersCount: 4,
      isPublic: true,
    },
  ];

  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (!user) {
    navigate("/");
    return null;
  }

  const handleCreateGame = () => {
    // –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã
    console.log("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã");
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–æ–≤–æ–π –∏–≥—Ä—ã
    navigate("/game/5");
  };

  const handleLogout = () => {
    logout();
    navigate("/");
  };

  return (
    <div className="min-h-screen bg-gray-900 p-6">
      <div className="max-w-6xl mx-auto">
        {/* –®–∞–ø–∫–∞ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º */}
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-2xl font-bold text-white">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.username}!
          </h1>
          <div className="flex space-x-4">
            <button
              onClick={handleCreateGame}
              className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg"
            >
              –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É
            </button>
            <button
              onClick={handleLogout}
              className="bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg"
            >
              –í—ã–π—Ç–∏
            </button>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ "–ú–æ–∏ –∏–≥—Ä—ã" */}
        <div className="mb-12">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-xl font-bold text-white">–ú–æ–∏ –∏–≥—Ä—ã</h2>
            <span className="text-gray-400">
              {myGames.length} {myGames.length === 1 ? "–∏–≥—Ä–∞" : "–∏–≥—Ä"}
            </span>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {myGames.map((game) => (
              <div
                key={game.id}
                className="bg-gray-800 rounded-xl p-6 cursor-pointer hover:bg-gray-750 transition"
                onClick={() => navigate(`/game/${game.id}`)}
              >
                <div className="flex justify-between items-start">
                  <h2 className="text-xl font-bold text-white">{game.title}</h2>
                  <span
                    className={`${
                      game.status === "active"
                        ? "bg-green-500/20 text-green-300"
                        : "bg-gray-500/20 text-gray-300"
                    } text-sm px-2 py-1 rounded`}
                  >
                    {game.status === "active" ? "–ê–∫—Ç–∏–≤–Ω–∞" : "–ù–µ–∞–∫—Ç–∏–≤–Ω–∞"}
                  </span>
                </div>

                <p className="text-gray-400 mt-2">{game.description}</p>

                <div className="flex justify-between items-center mt-4">
                  <div className="text-gray-400 text-sm">
                    üë§ {game.playersCount} –∏–≥—Ä–æ–∫–æ–≤
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã" */}
        <div>
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-xl font-bold text-white">–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã</h2>
            <span className="text-gray-400">
              {availableGames.length}{" "}
              {availableGames.length === 1 ? "–∏–≥—Ä–∞" : "–∏–≥—Ä"}
            </span>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {availableGames.map((game) => (
              <div
                key={game.id}
                className="bg-gray-800 rounded-xl p-6 cursor-pointer hover:bg-gray-750 transition"
                onClick={() => navigate(`/game/${game.id}`)}
              >
                <div className="flex justify-between items-start">
                  <h2 className="text-xl font-bold text-white">{game.title}</h2>
                  <span
                    className={`${
                      game.status === "active"
                        ? "bg-green-500/20 text-green-300"
                        : game.status === "pending"
                        ? "bg-yellow-500/20 text-yellow-300"
                        : "bg-gray-500/20 text-gray-300"
                    } text-sm px-2 py-1 rounded`}
                  >
                    {game.status === "active"
                      ? "–ê–∫—Ç–∏–≤–Ω–∞"
                      : game.status === "pending"
                      ? "–û–∂–∏–¥–∞–Ω–∏–µ"
                      : "–ù–µ–∞–∫—Ç–∏–≤–Ω–∞"}
                  </span>
                </div>

                <p className="text-gray-400 mt-2">{game.description}</p>

                <div className="flex justify-between items-center mt-4">
                  <div className="text-gray-400 text-sm">
                    <span className="mr-2">üë§ {game.playersCount} –∏–≥—Ä–æ–∫–æ–≤</span>
                    {!game.isPublic && <span>üîí –ü—Ä–∏–≤–∞—Ç–Ω–∞—è</span>}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

export default DashboardPage;
