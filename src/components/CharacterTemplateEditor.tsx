// src/components/CharacterTemplateEditor.tsx
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";

const CharacterTemplateEditor = () => {
  const navigate = useNavigate();
  const [fields, setFields] = useState([
    { id: 1, name: "–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", type: "text", required: true },
    {
      id: 2,
      name: "–†–∞—Å–∞",
      type: "select",
      options: ["–ß–µ–ª–æ–≤–µ–∫", "–≠–ª—å—Ñ", "–ì–Ω–æ–º"],
      required: true,
    },
    { id: 3, name: "–ö–ª–∞—Å—Å", type: "text", required: true },
    { id: 4, name: "–£—Ä–æ–≤–µ–Ω—å", type: "number", required: true },
    { id: 5, name: "–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è", type: "textarea", required: false },
  ]);

  const [newField, setNewField] = useState({
    name: "",
    type: "text",
    required: true,
    options: [] as string[],
  });

  const [showAddField, setShowAddField] = useState(false);

  return (
    <div className="bg-gray-800 rounded-xl p-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-xl font-bold text-white">
          –®–∞–±–ª–æ–Ω –∞–Ω–∫–µ—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        </h2>
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π */}
      <div className="mb-6">
        <h3 className="text-lg font-semibold text-gray-300 mb-3">
          –¢–µ–∫—É—â–∏–µ –ø–æ–ª—è –∞–Ω–∫–µ—Ç—ã
        </h3>

        <div className="space-y-2">
          {fields.map((field) => (
            <div
              key={field.id}
              className="bg-gray-700 p-3 rounded-lg flex justify-between items-center"
            >
              <div>
                <div className="flex items-center">
                  <span className="font-medium text-white">{field.name}</span>
                  {field.required && (
                    <span className="ml-2 text-xs bg-red-500/20 text-red-300 px-1.5 py-0.5 rounded">
                      –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ
                    </span>
                  )}
                </div>
                <div className="text-gray-400 text-sm mt-1">
                  –¢–∏–ø:{" "}
                  {field.type === "select"
                    ? `–í—ã–±–æ—Ä (${field.options?.join(", ")})`
                    : field.type === "textarea"
                    ? "–¢–µ–∫—Å—Ç (–º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π)"
                    : field.type}
                </div>
              </div>

              <div className="flex space-x-2">
                <button className="text-gray-400 hover:text-yellow-300">
                  ‚úèÔ∏è
                </button>
                <button className="text-gray-400 hover:text-red-400">üóëÔ∏è</button>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—è */}
      <div className="border-t border-gray-700 pt-4">
        <button
          onClick={() => setShowAddField(!showAddField)}
          className="flex items-center text-purple-400 hover:text-purple-300 mb-3"
        >
          <span className="mr-1">{showAddField ? "‚àí" : "+"}</span>
          {showAddField ? "–°–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É" : "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø–æ–ª–µ"}
        </button>

        {showAddField && (
          <div className="bg-gray-750 p-4 rounded-lg space-y-4">
            <div>
              <label className="block text-gray-400 mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è</label>
              <input
                type="text"
                value={newField.name}
                onChange={(e) =>
                  setNewField({ ...newField, name: e.target.value })
                }
                className="w-full p-2 bg-gray-700 text-white rounded-lg"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í–æ–∑—Ä–∞—Å—Ç"
              />
            </div>

            <div>
              <label className="block text-gray-400 mb-2">–¢–∏–ø –ø–æ–ª—è</label>
              <select
                value={newField.type}
                onChange={(e) =>
                  setNewField({ ...newField, type: e.target.value })
                }
                className="w-full p-2 bg-gray-700 text-white rounded-lg"
              >
                <option value="text">–¢–µ–∫—Å—Ç (–æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞)</option>
                <option value="textarea">–¢–µ–∫—Å—Ç (–º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π)</option>
                <option value="number">–ß–∏—Å–ª–æ</option>
                <option value="select">–í—ã–±–æ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞</option>
              </select>
            </div>

            {newField.type === "select" && (
              <div>
                <label className="block text-gray-400 mb-2">
                  –í–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
                </label>
                <input
                  type="text"
                  value={newField.options.join(", ")}
                  onChange={(e) =>
                    setNewField({
                      ...newField,
                      options: e.target.value
                        .split(",")
                        .map((item) => item.trim()),
                    })
                  }
                  className="w-full p-2 bg-gray-700 text-white rounded-lg"
                  placeholder="–ß–µ–ª–æ–≤–µ–∫, –≠–ª—å—Ñ, –ì–Ω–æ–º, –û—Ä–∫"
                />
              </div>
            )}

            <div className="flex items-center">
              <input
                type="checkbox"
                id="required"
                checked={newField.required}
                onChange={(e) =>
                  setNewField({ ...newField, required: e.target.checked })
                }
                className="mr-2"
              />
              <label htmlFor="required" className="text-gray-400">
                –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
              </label>
            </div>

            <div className="flex space-x-3">
              <button
                className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg"
                onClick={() => {
                  setFields([...fields, { ...newField, id: Date.now() }]);
                  setNewField({
                    name: "",
                    type: "text",
                    required: true,
                    options: [],
                  });
                  setShowAddField(false);
                }}
              >
                –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ
              </button>
              <button
                className="bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg"
                onClick={() => setShowAddField(false)}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è */}
      <div className="flex justify-end space-x-3 mt-6">
        <button
          onClick={() => navigate(-1)}
          className="bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg"
        >
          –û—Ç–º–µ–Ω–∏—Ç—å
        </button>
        <button
          className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg"
          onClick={() => navigate(-1)}
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω
        </button>
      </div>
    </div>
  );
};

export default CharacterTemplateEditor;
